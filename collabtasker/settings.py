"""
Django settings for collabtasker project.
Generated by 'django-admin startproject' using Django 5.2.3.
"""

import os
import ssl
from pathlib import Path
from dotenv import load_dotenv
import dj_database_url

# Load .env file
load_dotenv()

# ==============================
# BASE DIRECTORY
# ==============================

BASE_DIR = Path(__file__).resolve().parent.parent

# ==============================
# SECRET KEYS & DEBUG
# ==============================

SECRET_KEY = os.getenv('SECRET_KEY', 'your-local-secret-key')

DEBUG = True

ALLOWED_HOSTS = ['localhost', '127.0.0.1','web-production-755f5.up.railway.app']

CSRF_TRUSTED_ORIGINS = ['http://localhost:8000', 'http://127.0.0.1:8000','https://collabtasker.onrender.com',
    'https://web-production-755f5.up.railway.app',]



# # ==============================
# # REDIS + CELERY LOCAL CONFIG
# # ==============================

# # Local Redis
# redis_url = "redis://127.0.0.1:6379/0"

# # Celery
# CELERY_BROKER_URL = redis_url
# CELERY_RESULT_BACKEND = redis_url
# CELERY_ACCEPT_CONTENT = ['json']
# CELERY_TASK_SERIALIZER = 'json'

# # Channels
# CHANNEL_LAYERS = {
#     'default': {
#         'BACKEND': 'channels_redis.core.RedisChannelLayer',
#         'CONFIG': {
#             "hosts": [redis_url],
#         },
#     },
# }

# # Cache
# CACHES = {
#     "default": {
#         "BACKEND": "django_redis.cache.RedisCache",
#         "LOCATION": redis_url,
#         "OPTIONS": {
#             "CLIENT_CLASS": "django_redis.client.DefaultClient",
#         }
#     }
# }


# ==============================
# REDIS + CELERY CONFIG (use env variable on Railway)
# ==============================

# Get Redis URL from environment variable, fallback to localhost for local dev
redis_url = os.getenv("REDIS_URL", "redis://127.0.0.1:6379/0")

# Celery configuration
CELERY_BROKER_URL = redis_url
CELERY_RESULT_BACKEND = redis_url
CELERY_ACCEPT_CONTENT = ['json']
CELERY_TASK_SERIALIZER = 'json'

# Channels (for WebSockets)
CHANNEL_LAYERS = {
    'default': {
        'BACKEND': 'channels_redis.core.RedisChannelLayer',
        'CONFIG': {
            "hosts": [redis_url],
        },
    },
}

# Cache configuration
CACHES = {
    "default": {
        "BACKEND": "django_redis.cache.RedisCache",
        "LOCATION": redis_url,
        "OPTIONS": {
            "CLIENT_CLASS": "django_redis.client.DefaultClient",
        }
    }
}


# ==============================
# APPLICATION DEFINITION
# ==============================

INSTALLED_APPS = [
    # Django default
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    # Third party
    'rest_framework',
    'rest_framework_simplejwt',
    'channels',
    'django_celery_beat',

    # Your apps
    'accounts',
    'projects',
    'chat',
    'notifications',
    'logs',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    
    'django.contrib.sessions.middleware.SessionMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'collabtasker.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'collabtasker.wsgi.application'
ASGI_APPLICATION = 'collabtasker.asgi.application'

# ==============================
# DATABASE CONFIGURATION
# ==============================

DATABASE_URL = os.getenv("DATABASE_URL", "sqlite:///db.sqlite3")

DATABASES = {
    'default': dj_database_url.parse(DATABASE_URL, conn_max_age=600)
}

# ==============================
# AUTHENTICATION
# ==============================

AUTH_USER_MODEL = 'accounts.CustomUser'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    )
}

# ==============================
# PASSWORD VALIDATORS
# ==============================

AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# ==============================
# INTERNATIONALIZATION
# ==============================

LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True

# ==============================
# STATIC FILES
# ==============================

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# ==============================
# EMAIL SETTINGS
# ==============================

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = 'spmacavity@gmail.com'
EMAIL_HOST_PASSWORD = 'siicktfvtluefkqm'
DEFAULT_FROM_EMAIL = EMAIL_HOST_USER

# ==============================
# DEFAULT PRIMARY KEY FIELD TYPE
# ==============================

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
